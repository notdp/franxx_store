# Supabase Configuration (new API keys)
NEXT_PUBLIC_SUPABASE_URL=your-supabase-project-url
NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY=your-supabase-publishable-key

# Server-only service role key (DO NOT expose to client)
# SUPABASE_SECRET_KEY=your-service-role-key

# Legacy (compat):
# If you still use legacy anon/service role keys, set these instead of the new ones.
# NEXT_PUBLIC_SUPABASE_ANON_KEY=
# SUPABASE_SERVICE_ROLE_KEY=

# Legacy symmetric JWT secret (HS*) — server-side verification during migration
# Find in Dashboard → Authentication → Settings → JWT → JWT secret
# SUPABASE_JWT_SECRET=your-legacy-hs256-secret

# Inline JWKS (ES256) for zero-network verify on cold start
# Prefer the full JSON from
#   https://<project>.supabase.co/auth/v1/.well-known/jwks.json
# FRX_SUPABASE_JWKS={"keys":[{"kty":"EC","crv":"P-256","alg":"ES256","kid":"...","x":"...","y":"..."}]}

# Debug/strictness toggles for auth
# FRX_DEBUG_AUTH=1
# FRX_STRICT_MW_ADMIN=1
# FRX_ALLOW_JWT_DECODE_FALLBACK=0

# API Base (Edge Function / Backend)
# Example: https://<project-id>.supabase.co/functions/v1/your-edge-fn
NEXT_PUBLIC_API_BASE_URL=

# Stripe Secrets (server only)
# Required for webhook and server-side checkout
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# App Base URL (for Stripe return URLs)
NEXT_PUBLIC_BASE_URL=http://localhost:3000

# Optional: direct Postgres connection (for psql / supabase db push)
# Example (local supabase): postgres://postgres:postgres@127.0.0.1:54322/postgres
DATABASE_URL=

# Supabase project reference (for CLI commands like `supabase link`)
NEXT_PUBLIC_SUPABASE_PROJECT_REF=

# Dev convenience: mock user (client only)
NEXT_PUBLIC_USE_MOCK_USER=false
